  name: Deploy PWA to GitHub Pages

  on:
    push:
      branches: [ master, develop ]
    pull_request:
      branches: [ master ]
    workflow_dispatch:

  permissions:
    contents: read
    pages: write
    id-token: write

  concurrency:
    group: "pages"
    cancel-in-progress: false

  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '18'
            cache: 'npm'
            cache-dependency-path: real_estate_tracker/desktop/package-lock.json

        - name: Install dependencies
          run: |
            cd real_estate_tracker/desktop
            npm ci

        - name: Build PWA
          run: |
            cd real_estate_tracker/desktop
            # Build with Vite
            npx vite build
            # Check if public files exist in desktop root, if not check parent directory
            if [ -f "../../desktop/public/service-worker.js" ]; then
              cp ../../desktop/public/service-worker.js dist/
              cp ../../desktop/public/offline.html dist/
            elif [ -f "../../../desktop/public/service-worker.js" ]; then
              cp ../../../desktop/public/service-worker.js dist/
              cp ../../../desktop/public/offline.html dist/
            else
              echo "Warning: service-worker.js not found, creating placeholder"
              echo "// Placeholder service worker" > dist/service-worker.js
              echo "<html><body>Offline</body></html>" > dist/offline.html
            fi
            # Create .nojekyll file to serve files starting with _
            touch dist/.nojekyll
            # Copy manifest.json if it exists
            if [ -f "public/manifest.json" ]; then
              cp public/manifest.json dist/
            elif [ -f "../../desktop/public/manifest.json" ]; then
              cp ../../desktop/public/manifest.json dist/
            fi

        - name: Setup Pages
          uses: actions/configure-pages@v3

        - name: Upload artifact
          uses: actions/upload-pages-artifact@v3
          with:
            path: './real_estate_tracker/desktop/dist'

    deploy:
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4
